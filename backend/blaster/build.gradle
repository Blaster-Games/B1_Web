buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.kdr'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본 기능
	implementation 'org.springframework.boot:spring-boot-starter-web'         // REST API 등 웹 기능
	implementation 'org.springframework.boot:spring-boot-starter-security'    // 인증/인가 보안 기능
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'    // JPA DB 접근

	// 개발 환경 전용
	developmentOnly 'org.springframework.boot:spring-boot-devtools'           // DevTools 개발 편의 기능

	// Lombok
	compileOnly 'org.projectlombok:lombok'                                    // 코드 간소화용 Lombok
	annotationProcessor 'org.projectlombok:lombok'                            // Lombok 애너테이션 처리

	// MariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'                        // MariaDB JDBC 드라이버

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'                          // JWT API
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'                            // JWT 구현체
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'                         // JWT JSON 처리용 Jackson

	// Gson
	implementation 'com.google.code.gson:gson:2.11.0'                         // JSON 처리용 Gson

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"     // QueryDSL JPA
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	)

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'    // 테스트용 기본 종속성
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'              // JUnit 플랫폼 런처
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn('clean')